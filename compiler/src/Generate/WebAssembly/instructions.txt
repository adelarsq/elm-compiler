unreachable | [t1*] -> [t2*]
nop | [] -> []
block [t?] | [] -> [t*]
loop [t?] | [] -> [t*]
if [t?] | [] -> [t*]
else | 

end | [t1* t?] -> [t2*]
br l | [t? i32] -> [t?]
br_if l | [t1* t? i32] -> [t2*]
br_table l  l | [t1* t?] -> [t2*]
return | [t1*] -> [t2*]
call x | [t1* i32] -> [t2*]
call_indirect x | 

drop | [t] -> [] [t] -> []
select | [t t i32] -> [t]

get_local x | [] -> [t]
set_local x | [t] -> []
tee_local x | [t] -> [t]
get_global x | [] -> [t]
set_global x | [t] -> []

i32.load memarg | [i32] -> [i64]
i64.load memarg | [i32] -> [i32]
f32.load memarg | [i32] -> [f32]
f64.load memarg | [i32] -> [f64]
i32.load8_s memarg | [i32] -> [i32]
i32.load8_u memarg | [i32] -> [i32]
i32.load16_s memarg | [i32] -> [i32]
i32.load16_u memarg | [i32] -> [i32]
i64.load8_s memarg | [i32] -> [i64]
i64.load8_u memarg | [i32] -> [i64]
i64.load16_s memarg | [i32] -> [i64]
i64.load16_u memarg | [i32] -> [i64]
i64.load32_s memarg | [i32] -> [i64]
i64.load32_u memarg | [i32] -> [i64]
i32.store memarg | [i32 i32] -> []
i64.store memarg | [i32 i64] -> []
f32.store memarg | [i32 f32] -> []
f64.store memarg | [i32 f64] -> []
i32.store8 memarg | [i32 i32] -> []
i32.store16 memarg | [i32 i32] -> []
i64.store8 memarg | [i32 i64] -> []
i64.store16 memarg | [i32 i64] -> []
i64.store32 memarg | [i32 i64] -> []
memory.size | [] -> [i32]
memory.grow | [i32] -> [i32]
i32.const i32 | [] -> [i32]
i64.const i64 | [] -> [i64]
f32.const f32 | [] -> [f32]
f64.const f64 | [] -> [f64]
i32.eqz | [i32] -> [i32]
i32.eq | [i32 i32] -> [i32]
i32.ne | [i32 i32] -> [i32]
i32.lt_s | [i32 i32] -> [i32]
i32.lt_u | [i32 i32] -> [i32]
i32.gt_s | [i32 i32] -> [i32]
i32.gt_u | [i32 i32] -> [i32]
i32.le_s | [i32 i32] -> [i32]
i32.le_u | [i32 i32] -> [i32]
i32.ge_s | [i32 i32] -> [i32]
i32.ge_u | [i32 i32] -> [i32]
i64.eqz | [i64] -> [i32]
i64.eq | [i64 i64] -> [i32]
i64.ne | [i64 i64] -> [i32]
i64.lt_s | [i64 i64] -> [i32]
i64.lt_u | [i64 i64] -> [i32]
i64.gt_s | [i64 i64] -> [i32]
i64.gt_u | [i64 i64] -> [i32]
i64.le_s | [i64 i64] -> [i32]
i64.le_u | [i64 i64] -> [i32]
i64.ge_s | [i64 i64] -> [i32]
i64.ge_u | [i64 i64] -> [i32]
f32.eq | [f32 f32] -> [i32]
f32.ne | [f32 f32] -> [i32]
f32.lt | [f32 f32] -> [i32]
f32.gt | [f32 f32] -> [i32]
f32.le | [f32 f32] -> [i32]
f32.ge | [f32 f32] -> [i32]
f64.eq | [f64 f64] -> [i32]
f64.ne | [f64 f64] -> [i32]
f64.lt | [f64 f64] -> [i32]
f64.gt | [f64 f64] -> [i32]
f64.le | [f64 f64] -> [i32]
f64.ge | [f64 f64] -> [i32]
i32.clz | [i32] -> [i32]
i32.ctz | [i32] -> [i32]
i32.popcnt | [i32] -> [i32]
i32.add | [i32 i32] -> [i32]
i32.sub | [i32 i32] -> [i32]
i32.mul | [i32 i32] -> [i32]
i32.div_s | [i32 i32] -> [i32]
i32.div_u | [i32 i32] -> [i32]
i32.rem_s | [i32 i32] -> [i32]
i32.rem_u | [i32 i32] -> [i32]
i32.and | [i32 i32] -> [i32]
i32.or | [i32 i32] -> [i32]
i32.xor | [i32 i32] -> [i32]
i32.shl | [i32 i32] -> [i32]
i32.shr_s | [i32 i32] -> [i32]
i32.shr_u | [i32 i32] -> [i32]
i32.rotl | [i32 i32] -> [i32]
i32.rotr | [i32 i32] -> [i32]
i64.clz | [i64] -> [i64]
i64.ctz | [i64] -> [i64]
i64.popcnt | [i64] -> [i64]
i64.add | [i64 i64] -> [i64]
i64.sub | [i64 i64] -> [i64]
i64.mul | [i64 i64] -> [i64]
i64.div_s | [i64 i64] -> [i64]
i64.div_u | [i64 i64] -> [i64]
i64.rem_s | [i64 i64] -> [i64]
i64.rem_u | [i64 i64] -> [i64]
i64.and | [i64 i64] -> [i64]
i64.or | [i64 i64] -> [i64]
i64.xor | [i64 i64] -> [i64]
i64.shl | [i64 i64] -> [i64]
i64.shr_s | [i64 i64] -> [i64]
i64.shr_u | [i64 i64] -> [i64]
i64.rotl | [i64 i64] -> [i64]
i64.rotr | [i64 i64] -> [i64]
f32.abs | [f32] -> [f32]
f32.neg | [f32] -> [f32]
f32.ceil | [f32] -> [f32]
f32.floor | [f32] -> [f32]
f32.trunc | [f32] -> [f32]
f32.nearest | [f32] -> [f32]
f32.sqrt | [f32] -> [f32]
f32.add | [f32 f32] -> [f32]
f32.sub | [f32 f32] -> [f32]
f32.mul | [f32 f32] -> [f32]
f32.div | [f32 f32] -> [f32]
f32.min | [f32 f32] -> [f32]
f32.max | [f32 f32] -> [f32]
f32.copysign | [f32 f32] -> [f32]
f64.abs | [f64] -> [f64]
f64.neg | [f64] -> [f64]
f64.ceil | [f64] -> [f64]
f64.floor | [f64] -> [f64]
f64.trunc | [f64] -> [f64]
f64.nearest | [f64] -> [f64]
f64.sqrt | [f64] -> [f64]
f64.add | [f64 f64] -> [f64]
f64.sub | [f64 f64] -> [f64]
f64.mul | [f64 f64] -> [f64]
f64.div | [f64 f64] -> [f64]
f64.min | [f64 f64] -> [f64]
f64.max | [f64 f64] -> [f64]
f64.copysign | [f64 f64] -> [f64]
i32.wrap/i64 | [i64] -> [i32]
i32.trunc_s/f32 | [f32] -> [i32]
i32.trunc_u/f32 | [f32] -> [i32]
i32.trunc_s/f64 | [f64] -> [i32]
i32.trunc_u/f64 | [f64] -> [i32]
i64.extend_s/i32 | [i32] -> [i64]
i64.extend_u/i32 | [i32] -> [i64]
i64.trunc_s/f32 | [f32] -> [i64]
i64.trunc_u/f32 | [f32] -> [i64]
i64.trunc_s/f64 | [f64] -> [i64]
i64.trunc_u/f64 | [f64] -> [i64]
f32.convert_s/i32 | [i32] -> [f32]
f32.convert_u/i32 | [i32] -> [f32]
f32.convert_s/i64 | [i64] -> [f32]
f32.convert_u/i64 | [i64] -> [f32]
f32.demote/f64 | [f64] -> [f32]
f64.convert_s/i32 | [i32] -> [f64]
f64.convert_u/i32 | [i32] -> [f64]
f64.convert_s/i64 | [i64] -> [f64]
f64.convert_u/i64 | [i64] -> [f64]
f64.promote/f32 | [f32] -> [f64]
i32.reinterpret/f32 | [f32] -> [i32]
i64.reinterpret/f64 | [f64] -> [i64]
f32.reinterpret/i32 | [i32] -> [f32]
f64.reinterpret/i64 | [i64] -> [f64]
